<?xml version="1.0" encoding="utf-8" ?>

<helpItems schema="maml">

  <!-- v 1.1.0.9 -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
    <command:details>
      <command:name>
        Initialize-GitRepository
      </command:name>
      <maml:description>
        <maml:para>
          Creates an empty git repository.  It is safe to use this on an
          existing repository.
        </maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para></maml:para>
      </maml:copyright>
      <command:verb>Initialize</command:verb>
      <command:noun>GitRepository</command:noun>
      <dev:version></dev:version>
    </command:details>

    <maml:description>
      <maml:para>
        The Initialize-GitRepository cmdlet creates an empty git repository.

A bare repository (lacking a working directory) may be created.

Running Initialize-GitRepository in an existing repository is safe.
      </maml:para>
    </maml:description>

    <!-- Cmdlet syntax section-->
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Initialize-GitRepository</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
          <maml:name>Directory</maml:name>
          <maml:description>
            <maml:para>Specifies the directory to create.  Defaults to the current working directory.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        </command:parameter>

        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
          <maml:name>Bare</maml:name>
          <maml:description>
            <maml:para>Specifies that a bare repository (without a working directory) should be created.</maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    
    <!-- Cmdlet parameter section  -->
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="true (ByValue)" position="1">
        <maml:name>Directory</maml:name>
        <maml:description>
          <maml:para>
            Specifies the directory to create.  Defaults to the current working directory.
          </maml:para>
        </maml:description>
        
        <command:parameterValue required="false" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri/>
        </dev:type>
        <dev:defaultValue>Current Working Directory</dev:defaultValue>
      </command:parameter>
      
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>Bare</maml:name>
        <maml:description>
          <maml:para>Specifies that a bare repository (without a working directory) should be created.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri/>
        </dev:type>
        <dev:defaultValue></dev:defaultValue>
      </command:parameter>

      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
        <maml:name>PassThru</maml:name>
        <maml:description>
          <maml:para>Specifies that the created Repository object should be returned.  This object must be disposed.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri/>
        </dev:type>
        <dev:defaultValue></dev:defaultValue>
      </command:parameter>
    </command:parameters>
    
    <!-- Input - Output section-->
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None</maml:name>
          <maml:uri/>
          <maml:description />
        </dev:type>
        <maml:description>
          <maml:para>
            <!-- description  -->
            You cannot pipe objects to Initialize-GitRepository.
          </maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>

    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>LibGit2Sharp.Repository</maml:name>
          <maml:uri />
          <maml:description />
        </dev:type>
        <maml:description>
          <maml:para>
            <!-- description  -->
            When you use the PassThru parameter, Initialize-GitRepository returns the newly created Repository object.  Otherwise, this cmdlet does not generate any output.
          </maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>

    <!-- Error section-->
    <command:terminatingErrors />
    <command:nonTerminatingErrors />

    <!-- Notes section  -->
    <maml:alertSet>
      <maml:title></maml:title>
      <maml:alert>
        <maml:para>
          If you use the PassThru parameter, you MUST call the Dispose method on the returned Repository object.
        </maml:para>
      </maml:alert>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>

    <!-- Example section  -->
    <command:examples>
      <command:example>
        <maml:title>
          -------------------------- EXAMPLE 1 --------------------------
        </maml:title>
        <maml:introduction>
          <maml:para>C:\PS&gt;</maml:para>
        </maml:introduction>
        <dev:code>
          Initialize-GitRepository -Directory "C:\Temp\NewGitRepo"
        </dev:code>
        <dev:remarks>
          <maml:para>Creates a new git repository at "C:\Temp\NewGitRepo".</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText></command:commandText>
          </command:commandLine>
        </command:commandLines>
      </command:example>

      <command:example>
        <maml:title>
          -------------------------- EXAMPLE 2 --------------------------
        </maml:title>
        <maml:introduction>
          <maml:para>C:\PS&gt;</maml:para>
        </maml:introduction>
        <dev:code>
          Initialize-GitRepository -Directory "repo.git" -Bare
        </dev:code>
        <dev:remarks>
          <maml:para>Creates a new (bare) git repository at ".\repo.git"</maml:para>
          <maml:para></maml:para>
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText></command:commandText>
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>

    <!-- Link section  -->
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Clone-GitRepository</maml:linkText>
        <maml:uri/>
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
</helpItems>
